#include<iostream>

#include<string>

int main() {

 std::string gram, part1, part2, modifiedGram, newGram, tempGram;

 int i, j = 0, k = 0, l = 0, pos;

std::cout << "Enter Production : A->";

 std::getline(std::cin, gram);

for (i = 0; gram[i] != '|'; i++, j++)

 part1 += gram[i];

 part1[j] = '\0';

for (j = ++i, i = 0; gram[j] != '\0'; j++, i++)

 part2 += gram[j];

 part2[i] = '\0';

 for (i = 0; i < std::max(part1.length(), part2.length()); i++) {

 if (part1[i] == part2[i]) {

 modifiedGram += part1[i];

 k++;

 pos = i + 1;

 }

 }

 for (i = pos, j = 0; part1[i] != '\0'; i++, j++) {

 newGram += part1[i];

}

 newGram += '|';

 for (i = pos; part2[i] != '\0'; i++, j++) {

 newGram += part2[i];

 }

 modifiedGram[k] = 'X';

 modifiedGram[++k] = '\0';

 newGram[j] = '\0';

 std::cout << "\nGrammar Without Left Factoring : : \n";

 std::cout << " A->" << modifiedGram << std::endl;

 std::cout << " X->" << newGram << std::endl;

 return 0;

}
